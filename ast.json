[ {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/SpringHypermediaApiApplication.java",
  "packageName" : "com.baeldung",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.boot.SpringApplication"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.boot.autoconfigure.SpringBootApplication"
  } ],
  "entities" : [ {
    "name" : "SpringHypermediaApiApplication",
    "description" : null,
    "annotations" : [ "SpringBootApplication" ],
    "methods" : [ {
      "name" : "main",
      "body" : "{\n    SpringApplication.run(SpringHypermediaApiApplication.class, args);\n}",
      "arguments" : [ "String[] args" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "run",
        "arguments" : [ "SpringHypermediaApiApplication.class", "args" ]
      } ],
      "usedEntities" : [ "SpringApplication", "args" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "// \npublic static void main(String[] args) {\n    SpringApplication.run(SpringHypermediaApiApplication.class, args);\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/SpringHypermediaApiApplication.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
  "packageName" : "com.baeldung.web.controller",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.stream.Collectors"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.beans.factory.annotation.Autowired"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.Link"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.http.HttpStatus"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestBody"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMapping"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMethod"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.ResponseStatus"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RestController"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ {
        "name" : "getIsbn",
        "body" : "{\n    return isbn;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "isbn" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getIsbn() {\n    return isbn;\n}"
      } ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookRepository",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "findByIsbn",
        "body" : "{\n}",
        "arguments" : [ "final String isbn" ],
        "accessModifier" : "",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "Book findByIsbn(final String isbn);"
      } ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.data.repository.CrudRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/persistence/BookRepository.java",
    "name" : "com.baeldung.persistence.BookRepository"
  }, {
    "dereferencedParts" : [ {
      "name" : "Checks",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "checkEntityExists",
        "body" : "{\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}",
        "arguments" : [ "T entity", "final String message" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "entity", "message" ],
        "annotations" : [ ],
        "returnType" : "T",
        "description" : null,
        "methodDefinition" : "// \npublic static final <T> T checkEntityExists(T entity, final String message) {\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}"
      } ],
      "fields" : [ ],
      "constructors" : [ {
        "name" : "Checks",
        "body" : "{\n    super();\n}",
        "arguments" : [ ],
        "accessModifier" : "private",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "private Checks() {\n    super();\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.EntityNotFoundException"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/Checks.java",
    "name" : "com.baeldung.web.error.Checks"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "getBook",
        "body" : "{\n    return book;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "book" ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "// \npublic Book getBook() {\n    return book;\n}"
      } ],
      "fields" : [ {
        "name" : "book",
        "accessModifier" : "private final",
        "value" : null,
        "type" : "Book",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "BookResource",
        "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
        "arguments" : [ "@NotNull final Book book" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "slash",
          "arguments" : [ "book.getIsbn()" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "BookController.class" ]
        }, {
          "name" : "getIsbn",
          "arguments" : [ ]
        } ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonCreator" ],
        "description" : null,
        "methodDefinition" : "@JsonCreator\npublic BookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.validation.constraints.NotNull"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.BookController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonCreator"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/BookResource.java",
    "name" : "com.baeldung.web.resource.BookResource"
  }, {
    "dereferencedParts" : [ {
      "name" : "CartResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "isPurchased",
        "body" : "{\n    return purchased;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "purchased" ],
        "annotations" : [ ],
        "returnType" : "boolean",
        "description" : null,
        "methodDefinition" : "public boolean isPurchased() {\n    return purchased;\n}"
      } ],
      "fields" : [ {
        "name" : "books",
        "accessModifier" : "private",
        "value" : null,
        "type" : "List<Book>",
        "description" : null
      }, {
        "name" : "purchased",
        "accessModifier" : "private",
        "value" : null,
        "type" : "boolean",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "CartResource",
        "body" : "{\n    super();\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public CartResource() {\n    super();\n}"
      }, {
        "name" : "CartResource",
        "body" : "{\n    super();\n    this.books = books;\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel());\n    if (!purchased && !this.books.isEmpty()) {\n        Link clearLink = null;\n        try {\n            clearLink = linkTo(CartController.class, CartController.class.getMethod(\"clearYourCart\")).withRel(\"clear\");\n        } catch (NoSuchMethodException | SecurityException e) {\n            e.printStackTrace();\n        }\n        this.add(clearLink);\n    }\n    if (purchased) {\n        this.add(linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\"));\n    }\n}",
        "arguments" : [ "final List<Book> books", "final boolean purchased" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "methodOn(CartController.class).seeYourCart()" ]
        }, {
          "name" : "seeYourCart",
          "arguments" : [ ]
        }, {
          "name" : "methodOn",
          "arguments" : [ "CartController.class" ]
        }, {
          "name" : "isEmpty",
          "arguments" : [ ]
        }, {
          "name" : "withRel",
          "arguments" : [ "\"clear\"" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "CartController.class", "CartController.class.getMethod(\"clearYourCart\")" ]
        }, {
          "name" : "getMethod",
          "arguments" : [ "\"clearYourCart\"" ]
        }, {
          "name" : "printStackTrace",
          "arguments" : [ ]
        }, {
          "name" : "add",
          "arguments" : [ "clearLink" ]
        }, {
          "name" : "add",
          "arguments" : [ "linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\")" ]
        }, {
          "name" : "withRel",
          "arguments" : [ "\"receipt\"" ]
        }, {
          "name" : "slash",
          "arguments" : [ "randomAlphanumeric(6)" ]
        }, {
          "name" : "slash",
          "arguments" : [ "\"/receipt\"" ]
        }, {
          "name" : "linkToCurrentMapping",
          "arguments" : [ ]
        }, {
          "name" : "randomAlphanumeric",
          "arguments" : [ "6" ]
        } ],
        "usedEntities" : [ "books", "purchased", "clearLink", "e" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public CartResource(final List<Book> books, final boolean purchased) {\n    super();\n    this.books = books;\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel());\n    if (!purchased && !this.books.isEmpty()) {\n        Link clearLink = null;\n        try {\n            clearLink = linkTo(CartController.class, CartController.class.getMethod(\"clearYourCart\")).withRel(\"clear\");\n        } catch (NoSuchMethodException | SecurityException e) {\n            e.printStackTrace();\n        }\n        this.add(clearLink);\n    }\n    if (purchased) {\n        this.add(linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\"));\n    }\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.BasicLinkBuilder.linkToCurrentMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.Link"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.CartController"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
    "name" : "com.baeldung.web.resource.CartResource"
  }, {
    "dereferencedParts" : [ {
      "name" : "NewCartResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "setPurchased",
        "body" : "{\n    this.purchased = purchased;\n}",
        "arguments" : [ "boolean purchased" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "purchased" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setPurchased(boolean purchased) {\n    this.purchased = purchased;\n}"
      } ],
      "fields" : [ {
        "name" : "books",
        "accessModifier" : "private final",
        "value" : null,
        "type" : "Resources<Book>",
        "description" : null
      }, {
        "name" : "purchased",
        "accessModifier" : "private",
        "value" : null,
        "type" : "boolean",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "NewCartResource",
        "body" : "{\n    super();\n    this.books = new Resources<Book>(books, Lists.newArrayList());\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}",
        "arguments" : [ "final Iterable<Book> books", "final boolean purchased" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "newArrayList",
          "arguments" : [ ]
        }, {
          "name" : "add",
          "arguments" : [ "linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "methodOn(NewCartController.class).seeYourCart()" ]
        }, {
          "name" : "seeYourCart",
          "arguments" : [ ]
        }, {
          "name" : "methodOn",
          "arguments" : [ "NewCartController.class" ]
        } ],
        "usedEntities" : [ "books", "Lists", "purchased" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public NewCartResource(final Iterable<Book> books, final boolean purchased) {\n    super();\n    this.books = new Resources<Book>(books, Lists.newArrayList());\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}"
      }, {
        "name" : "NewCartResource",
        "body" : "{\n    super();\n    this.books = new Resources<Book>(books, links);\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}",
        "arguments" : [ "final Iterable<Book> books", "final List<Link> links", "final boolean purchased" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "methodOn(NewCartController.class).seeYourCart()" ]
        }, {
          "name" : "seeYourCart",
          "arguments" : [ ]
        }, {
          "name" : "methodOn",
          "arguments" : [ "NewCartController.class" ]
        } ],
        "usedEntities" : [ "books", "links", "purchased" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public NewCartResource(final Iterable<Book> books, final List<Link> links, final boolean purchased) {\n    super();\n    this.books = new Resources<Book>(books, links);\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.Link"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.Resources"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.NewCartController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "jersey.repackaged.com.google.common.collect.Lists"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewCartResource.java",
    "name" : "com.baeldung.web.resource.NewCartResource"
  }, {
    "dereferencedParts" : [ ],
    "name" : "jersey.repackaged.com.google.common.collect.Lists"
  } ],
  "entities" : [ {
    "name" : "NewCartController",
    "description" : null,
    "annotations" : [ "RestController", "RequestMapping" ],
    "methods" : [ {
      "name" : "seeYourCart",
      "body" : "{\n    return new NewCartResource(initializeBooksInCart(), bookLinks(books), cartPurchased);\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "initializeBooksInCart",
        "arguments" : [ ]
      }, {
        "name" : "bookLinks",
        "arguments" : [ "books" ]
      } ],
      "usedEntities" : [ "RequestMethod", "books", "cartPurchased" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "NewCartResource",
      "description" : null,
      "methodDefinition" : "// read\n@RequestMapping(method = RequestMethod.GET)\npublic NewCartResource seeYourCart() {\n    return new NewCartResource(initializeBooksInCart(), bookLinks(books), cartPurchased);\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "addBookToCart",
      "body" : "{\n    final String isbn = book.getBook().getIsbn();\n    final Book bookToAdd = Checks.checkEntityExists(bookRepo.findByIsbn(book.getBook().getIsbn()), \"No Book found for isbn: \" + isbn);\n    initializeBooksInCart().add(bookToAdd);\n    return new NewCartResource(books, cartPurchased);\n}",
      "arguments" : [ "@RequestBody final BookResource book" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "getIsbn",
        "arguments" : [ ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      }, {
        "name" : "checkEntityExists",
        "arguments" : [ "bookRepo.findByIsbn(book.getBook().getIsbn())", "\"No Book found for isbn: \" + isbn" ]
      }, {
        "name" : "findByIsbn",
        "arguments" : [ "book.getBook().getIsbn()" ]
      }, {
        "name" : "getIsbn",
        "arguments" : [ ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      }, {
        "name" : "add",
        "arguments" : [ "bookToAdd" ]
      }, {
        "name" : "initializeBooksInCart",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "book", "Checks", "bookRepo", "isbn", "bookToAdd", "books", "cartPurchased" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "NewCartResource",
      "description" : null,
      "methodDefinition" : "// write\n@RequestMapping(method = RequestMethod.POST)\npublic NewCartResource addBookToCart(@RequestBody final BookResource book) {\n    final String isbn = book.getBook().getIsbn();\n    final Book bookToAdd = Checks.checkEntityExists(bookRepo.findByIsbn(book.getBook().getIsbn()), \"No Book found for isbn: \" + isbn);\n    initializeBooksInCart().add(bookToAdd);\n    return new NewCartResource(books, cartPurchased);\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "buy",
      "body" : "{\n    NewCartResource cart = new NewCartResource(initializeBooksInCart(), cartPurchased);\n    if (theCart.isPurchased()) {\n        cartPurchased = true;\n        cart.setPurchased(cartPurchased);\n    }\n    cart.add(new Link(\"http://localhost:8081/api/receipt/1\").withRel(\"receipt\"));\n    return cart;\n}",
      "arguments" : [ "@RequestBody final CartResource theCart" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "initializeBooksInCart",
        "arguments" : [ ]
      }, {
        "name" : "isPurchased",
        "arguments" : [ ]
      }, {
        "name" : "setPurchased",
        "arguments" : [ "cartPurchased" ]
      }, {
        "name" : "add",
        "arguments" : [ "new Link(\"http://localhost:8081/api/receipt/1\").withRel(\"receipt\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"receipt\"" ]
      } ],
      "usedEntities" : [ "RequestMethod", "cartPurchased", "theCart", "cart" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "NewCartResource",
      "description" : null,
      "methodDefinition" : "@RequestMapping(method = RequestMethod.PATCH)\npublic NewCartResource buy(@RequestBody final CartResource theCart) {\n    NewCartResource cart = new NewCartResource(initializeBooksInCart(), cartPurchased);\n    if (theCart.isPurchased()) {\n        cartPurchased = true;\n        cart.setPurchased(cartPurchased);\n    }\n    cart.add(new Link(\"http://localhost:8081/api/receipt/1\").withRel(\"receipt\"));\n    return cart;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "clearYourCart",
      "body" : "{\n    initializeBooksInCart().clear();\n    this.cartPurchased = false;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "clear",
        "arguments" : [ ]
      }, {
        "name" : "initializeBooksInCart",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "HttpStatus" ],
      "annotations" : [ "RequestMapping", "ResponseStatus" ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "@RequestMapping(method = RequestMethod.DELETE)\n@ResponseStatus(HttpStatus.NO_CONTENT)\npublic void clearYourCart() {\n    initializeBooksInCart().clear();\n    this.cartPurchased = false;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "initializeBooksInCart",
      "body" : "{\n    if (books == null) {\n        this.books = Lists.newArrayList();\n    }\n    return this.books;\n}",
      "arguments" : [ ],
      "accessModifier" : "",
      "methodsCalled" : [ {
        "name" : "newArrayList",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "books", "Lists" ],
      "annotations" : [ ],
      "returnType" : "List<Book>",
      "description" : null,
      "methodDefinition" : "// \nList<Book> initializeBooksInCart() {\n    if (books == null) {\n        this.books = Lists.newArrayList();\n    }\n    return this.books;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "bookLinks",
      "body" : "{\n    return theBooks.stream().map(this::getLink).collect(Collectors.toList());\n}",
      "arguments" : [ "final List<Book> theBooks" ],
      "accessModifier" : "",
      "methodsCalled" : [ {
        "name" : "collect",
        "arguments" : [ "Collectors.toList()" ]
      }, {
        "name" : "map",
        "arguments" : [ "this::getLink" ]
      }, {
        "name" : "stream",
        "arguments" : [ ]
      }, {
        "name" : "toList",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "theBooks", "Collectors" ],
      "annotations" : [ ],
      "returnType" : "List<Link>",
      "description" : null,
      "methodDefinition" : "List<Link> bookLinks(final List<Book> theBooks) {\n    return theBooks.stream().map(this::getLink).collect(Collectors.toList());\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "getLink",
      "body" : "{\n    return linkTo(BookController.class).slash(book.getIsbn()).withSelfRel();\n}",
      "arguments" : [ "final Book book" ],
      "accessModifier" : "",
      "methodsCalled" : [ {
        "name" : "withSelfRel",
        "arguments" : [ ]
      }, {
        "name" : "slash",
        "arguments" : [ "book.getIsbn()" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "BookController.class" ]
      }, {
        "name" : "getIsbn",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "book" ],
      "annotations" : [ ],
      "returnType" : "Link",
      "description" : null,
      "methodDefinition" : "Link getLink(final Book book) {\n    return linkTo(BookController.class).slash(book.getIsbn()).withSelfRel();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "books",
      "accessModifier" : "private",
      "value" : null,
      "type" : "List<Book>",
      "description" : null
    }, {
      "name" : "cartPurchased",
      "accessModifier" : "private",
      "value" : null,
      "type" : "boolean",
      "description" : null
    }, {
      "name" : "bookRepo",
      "accessModifier" : "private",
      "value" : null,
      "type" : "BookRepository",
      "description" : null
    } ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
  "packageName" : "com.baeldung.web.controller",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.beans.factory.InitializingBean"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.beans.factory.annotation.Autowired"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestBody"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMapping"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMethod"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RestController"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "Cart",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "books",
        "accessModifier" : "private",
        "value" : null,
        "type" : "List<Book>",
        "description" : null
      }, {
        "name" : "purchased",
        "accessModifier" : "private",
        "value" : null,
        "type" : "boolean",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Cart",
        "body" : "{\n    this.books = new ArrayList<Book>();\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Cart() {\n    this.books = new ArrayList<Book>();\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "java.util.ArrayList"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
    "name" : "com.baeldung.model.Cart"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookRepository",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "findByIsbn",
        "body" : "{\n}",
        "arguments" : [ "final String isbn" ],
        "accessModifier" : "",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "Book findByIsbn(final String isbn);"
      } ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.data.repository.CrudRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/persistence/BookRepository.java",
    "name" : "com.baeldung.persistence.BookRepository"
  }, {
    "dereferencedParts" : [ {
      "name" : "Checks",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "checkEntityExists",
        "body" : "{\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}",
        "arguments" : [ "T entity", "final String message" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "entity", "message" ],
        "annotations" : [ ],
        "returnType" : "T",
        "description" : null,
        "methodDefinition" : "// \npublic static final <T> T checkEntityExists(T entity, final String message) {\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}"
      } ],
      "fields" : [ ],
      "constructors" : [ {
        "name" : "Checks",
        "body" : "{\n    super();\n}",
        "arguments" : [ ],
        "accessModifier" : "private",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "private Checks() {\n    super();\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.EntityNotFoundException"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/Checks.java",
    "name" : "com.baeldung.web.error.Checks"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "getBook",
        "body" : "{\n    return book;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "book" ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "// \npublic Book getBook() {\n    return book;\n}"
      } ],
      "fields" : [ {
        "name" : "book",
        "accessModifier" : "private final",
        "value" : null,
        "type" : "Book",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "BookResource",
        "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
        "arguments" : [ "@NotNull final Book book" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "slash",
          "arguments" : [ "book.getIsbn()" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "BookController.class" ]
        }, {
          "name" : "getIsbn",
          "arguments" : [ ]
        } ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonCreator" ],
        "description" : null,
        "methodDefinition" : "@JsonCreator\npublic BookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.validation.constraints.NotNull"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.BookController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonCreator"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/BookResource.java",
    "name" : "com.baeldung.web.resource.BookResource"
  }, {
    "dereferencedParts" : [ {
      "name" : "CartResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "isPurchased",
        "body" : "{\n    return purchased;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "purchased" ],
        "annotations" : [ ],
        "returnType" : "boolean",
        "description" : null,
        "methodDefinition" : "public boolean isPurchased() {\n    return purchased;\n}"
      } ],
      "fields" : [ {
        "name" : "books",
        "accessModifier" : "private",
        "value" : null,
        "type" : "List<Book>",
        "description" : null
      }, {
        "name" : "purchased",
        "accessModifier" : "private",
        "value" : null,
        "type" : "boolean",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "CartResource",
        "body" : "{\n    super();\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public CartResource() {\n    super();\n}"
      }, {
        "name" : "CartResource",
        "body" : "{\n    super();\n    this.books = books;\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel());\n    if (!purchased && !this.books.isEmpty()) {\n        Link clearLink = null;\n        try {\n            clearLink = linkTo(CartController.class, CartController.class.getMethod(\"clearYourCart\")).withRel(\"clear\");\n        } catch (NoSuchMethodException | SecurityException e) {\n            e.printStackTrace();\n        }\n        this.add(clearLink);\n    }\n    if (purchased) {\n        this.add(linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\"));\n    }\n}",
        "arguments" : [ "final List<Book> books", "final boolean purchased" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "methodOn(CartController.class).seeYourCart()" ]
        }, {
          "name" : "seeYourCart",
          "arguments" : [ ]
        }, {
          "name" : "methodOn",
          "arguments" : [ "CartController.class" ]
        }, {
          "name" : "isEmpty",
          "arguments" : [ ]
        }, {
          "name" : "withRel",
          "arguments" : [ "\"clear\"" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "CartController.class", "CartController.class.getMethod(\"clearYourCart\")" ]
        }, {
          "name" : "getMethod",
          "arguments" : [ "\"clearYourCart\"" ]
        }, {
          "name" : "printStackTrace",
          "arguments" : [ ]
        }, {
          "name" : "add",
          "arguments" : [ "clearLink" ]
        }, {
          "name" : "add",
          "arguments" : [ "linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\")" ]
        }, {
          "name" : "withRel",
          "arguments" : [ "\"receipt\"" ]
        }, {
          "name" : "slash",
          "arguments" : [ "randomAlphanumeric(6)" ]
        }, {
          "name" : "slash",
          "arguments" : [ "\"/receipt\"" ]
        }, {
          "name" : "linkToCurrentMapping",
          "arguments" : [ ]
        }, {
          "name" : "randomAlphanumeric",
          "arguments" : [ "6" ]
        } ],
        "usedEntities" : [ "books", "purchased", "clearLink", "e" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public CartResource(final List<Book> books, final boolean purchased) {\n    super();\n    this.books = books;\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel());\n    if (!purchased && !this.books.isEmpty()) {\n        Link clearLink = null;\n        try {\n            clearLink = linkTo(CartController.class, CartController.class.getMethod(\"clearYourCart\")).withRel(\"clear\");\n        } catch (NoSuchMethodException | SecurityException e) {\n            e.printStackTrace();\n        }\n        this.add(clearLink);\n    }\n    if (purchased) {\n        this.add(linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\"));\n    }\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.BasicLinkBuilder.linkToCurrentMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.Link"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.CartController"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
    "name" : "com.baeldung.web.resource.CartResource"
  }, {
    "dereferencedParts" : [ {
      "name" : "NewBookResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "getBook",
        "body" : "{\n    return book;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonFilter" ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "// \n@JsonFilter(\"bookFilter\")\npublic Book getBook() {\n    return book;\n}"
      } ],
      "fields" : [ {
        "name" : "book",
        "accessModifier" : "private final",
        "value" : null,
        "type" : "Book",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "NewBookResource",
        "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
        "arguments" : [ "@NotNull final Book book" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "slash",
          "arguments" : [ "book.getIsbn()" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "BookController.class" ]
        }, {
          "name" : "getIsbn",
          "arguments" : [ ]
        } ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonCreator" ],
        "description" : null,
        "methodDefinition" : "@JsonCreator\npublic NewBookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.validation.constraints.NotNull"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.BookController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonCreator"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonFilter"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewBookResource.java",
    "name" : "com.baeldung.web.resource.NewBookResource"
  } ],
  "entities" : [ {
    "name" : "CartController",
    "description" : null,
    "annotations" : [ "RestController", "RequestMapping" ],
    "methods" : [ {
      "name" : "seeYourCart",
      "body" : "{\n    return toResource();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "toResource",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "CartResource",
      "description" : null,
      "methodDefinition" : "// read\n@RequestMapping(method = RequestMethod.GET)\npublic CartResource seeYourCart() {\n    return toResource();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "addBookToCart",
      "body" : "{\n    final String isbn = book.getBook().getIsbn();\n    final Book bookToAdd = Checks.checkEntityExists(bookRepo.findByIsbn(book.getBook().getIsbn()), \"No Book found for isbn: \" + isbn);\n    this.cart.add(bookToAdd);\n    return toResource();\n}",
      "arguments" : [ "@RequestBody final BookResource book" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "getIsbn",
        "arguments" : [ ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      }, {
        "name" : "checkEntityExists",
        "arguments" : [ "bookRepo.findByIsbn(book.getBook().getIsbn())", "\"No Book found for isbn: \" + isbn" ]
      }, {
        "name" : "findByIsbn",
        "arguments" : [ "book.getBook().getIsbn()" ]
      }, {
        "name" : "getIsbn",
        "arguments" : [ ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      }, {
        "name" : "add",
        "arguments" : [ "bookToAdd" ]
      }, {
        "name" : "toResource",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "book", "Checks", "bookRepo", "isbn", "bookToAdd" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "CartResource",
      "description" : null,
      "methodDefinition" : "// write\n@RequestMapping(method = RequestMethod.POST)\npublic CartResource addBookToCart(@RequestBody final BookResource book) {\n    final String isbn = book.getBook().getIsbn();\n    final Book bookToAdd = Checks.checkEntityExists(bookRepo.findByIsbn(book.getBook().getIsbn()), \"No Book found for isbn: \" + isbn);\n    this.cart.add(bookToAdd);\n    return toResource();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "addNewBookToCart",
      "body" : "{\n    final String isbn = book.getBook().getIsbn();\n    final Book bookToAdd = Checks.checkEntityExists(bookRepo.findByIsbn(book.getBook().getIsbn()), \"No Book found for isbn: \" + isbn);\n    this.cart.add(bookToAdd);\n    return toResource();\n}",
      "arguments" : [ "@RequestBody final NewBookResource book" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "getIsbn",
        "arguments" : [ ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      }, {
        "name" : "checkEntityExists",
        "arguments" : [ "bookRepo.findByIsbn(book.getBook().getIsbn())", "\"No Book found for isbn: \" + isbn" ]
      }, {
        "name" : "findByIsbn",
        "arguments" : [ "book.getBook().getIsbn()" ]
      }, {
        "name" : "getIsbn",
        "arguments" : [ ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      }, {
        "name" : "add",
        "arguments" : [ "bookToAdd" ]
      }, {
        "name" : "toResource",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "book", "Checks", "bookRepo", "isbn", "bookToAdd" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "CartResource",
      "description" : null,
      "methodDefinition" : "@RequestMapping(value = \"/new\", method = RequestMethod.POST)\npublic CartResource addNewBookToCart(@RequestBody final NewBookResource book) {\n    final String isbn = book.getBook().getIsbn();\n    final Book bookToAdd = Checks.checkEntityExists(bookRepo.findByIsbn(book.getBook().getIsbn()), \"No Book found for isbn: \" + isbn);\n    this.cart.add(bookToAdd);\n    return toResource();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "buy",
      "body" : "{\n    this.cart.setPurchased(theCart.isPurchased());\n    return toResource();\n}",
      "arguments" : [ "@RequestBody final CartResource theCart" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "setPurchased",
        "arguments" : [ "theCart.isPurchased()" ]
      }, {
        "name" : "isPurchased",
        "arguments" : [ ]
      }, {
        "name" : "toResource",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "theCart" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "CartResource",
      "description" : null,
      "methodDefinition" : "@RequestMapping(method = RequestMethod.PATCH)\npublic CartResource buy(@RequestBody final CartResource theCart) {\n    this.cart.setPurchased(theCart.isPurchased());\n    return toResource();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "clearYourCart",
      "body" : "{\n    this.cart.getBooks().clear();\n    this.cart.setPurchased(false);\n    return toResource();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "clear",
        "arguments" : [ ]
      }, {
        "name" : "getBooks",
        "arguments" : [ ]
      }, {
        "name" : "setPurchased",
        "arguments" : [ "false" ]
      }, {
        "name" : "toResource",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "CartResource",
      "description" : null,
      "methodDefinition" : "@RequestMapping(method = RequestMethod.DELETE)\npublic CartResource clearYourCart() {\n    this.cart.getBooks().clear();\n    this.cart.setPurchased(false);\n    return toResource();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "toResource",
      "body" : "{\n    return new CartResource(this.cart.getBooks(), this.cart.isPurchased());\n}",
      "arguments" : [ ],
      "accessModifier" : "private",
      "methodsCalled" : [ {
        "name" : "getBooks",
        "arguments" : [ ]
      }, {
        "name" : "isPurchased",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "returnType" : "CartResource",
      "description" : null,
      "methodDefinition" : "// \nprivate CartResource toResource() {\n    return new CartResource(this.cart.getBooks(), this.cart.isPurchased());\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "afterPropertiesSet",
      "body" : "{\n    this.cart = new Cart();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ "Override" ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "@Override\npublic void afterPropertiesSet() {\n    this.cart = new Cart();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "cart",
      "accessModifier" : "private",
      "value" : null,
      "type" : "Cart",
      "description" : null
    }, {
      "name" : "bookRepo",
      "accessModifier" : "private",
      "value" : null,
      "type" : "BookRepository",
      "description" : null
    } ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
  "packageName" : "com.baeldung.web.controller",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.stream.Collectors"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.beans.factory.annotation.Autowired"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.PathVariable"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestBody"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMapping"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMethod"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RestController"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookView",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : [ "Summary" ],
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    }, {
      "name" : "Summary",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/BookView.java",
    "name" : "com.baeldung.model.BookView"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookRepository",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "findByIsbn",
        "body" : "{\n}",
        "arguments" : [ "final String isbn" ],
        "accessModifier" : "",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "Book findByIsbn(final String isbn);"
      } ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.data.repository.CrudRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/persistence/BookRepository.java",
    "name" : "com.baeldung.persistence.BookRepository"
  }, {
    "dereferencedParts" : [ {
      "name" : "Checks",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "checkEntityExists",
        "body" : "{\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}",
        "arguments" : [ "T entity", "final String message" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "entity", "message" ],
        "annotations" : [ ],
        "returnType" : "T",
        "description" : null,
        "methodDefinition" : "// \npublic static final <T> T checkEntityExists(T entity, final String message) {\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}"
      } ],
      "fields" : [ ],
      "constructors" : [ {
        "name" : "Checks",
        "body" : "{\n    super();\n}",
        "arguments" : [ ],
        "accessModifier" : "private",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "private Checks() {\n    super();\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.EntityNotFoundException"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/Checks.java",
    "name" : "com.baeldung.web.error.Checks"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "getBook",
        "body" : "{\n    return book;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "book" ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "// \npublic Book getBook() {\n    return book;\n}"
      } ],
      "fields" : [ {
        "name" : "book",
        "accessModifier" : "private final",
        "value" : null,
        "type" : "Book",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "BookResource",
        "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
        "arguments" : [ "@NotNull final Book book" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "slash",
          "arguments" : [ "book.getIsbn()" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "BookController.class" ]
        }, {
          "name" : "getIsbn",
          "arguments" : [ ]
        } ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonCreator" ],
        "description" : null,
        "methodDefinition" : "@JsonCreator\npublic BookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.validation.constraints.NotNull"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.BookController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonCreator"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/BookResource.java",
    "name" : "com.baeldung.web.resource.BookResource"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonView"
  } ],
  "entities" : [ {
    "name" : "BookController",
    "description" : null,
    "annotations" : [ "RestController", "RequestMapping" ],
    "methods" : [ {
      "name" : "findByIsbn",
      "body" : "{\n    final Book book = Checks.checkEntityExists(repo.findByIsbn(isbn), \"No book found for isbn = \" + isbn);\n    final BookResource bookResource = new BookResource(book);\n    bookResource.add(linkTo(methodOn(CartController.class).addBookToCart(bookResource)).withRel(\"add-to-cart\"));\n    return bookResource;\n}",
      "arguments" : [ "@PathVariable final String isbn" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "checkEntityExists",
        "arguments" : [ "repo.findByIsbn(isbn)", "\"No book found for isbn = \" + isbn" ]
      }, {
        "name" : "findByIsbn",
        "arguments" : [ "isbn" ]
      }, {
        "name" : "add",
        "arguments" : [ "linkTo(methodOn(CartController.class).addBookToCart(bookResource)).withRel(\"add-to-cart\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"add-to-cart\"" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "methodOn(CartController.class).addBookToCart(bookResource)" ]
      }, {
        "name" : "addBookToCart",
        "arguments" : [ "bookResource" ]
      }, {
        "name" : "methodOn",
        "arguments" : [ "CartController.class" ]
      } ],
      "usedEntities" : [ "Checks", "repo", "isbn", "book", "bookResource" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "BookResource",
      "description" : null,
      "methodDefinition" : "// read\n@RequestMapping(\"/{isbn}\")\npublic BookResource findByIsbn(@PathVariable final String isbn) {\n    final Book book = Checks.checkEntityExists(repo.findByIsbn(isbn), \"No book found for isbn = \" + isbn);\n    final BookResource bookResource = new BookResource(book);\n    bookResource.add(linkTo(methodOn(CartController.class).addBookToCart(bookResource)).withRel(\"add-to-cart\"));\n    return bookResource;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "findAll",
      "body" : "{\n    final List<Book> books = (List<Book>) repo.findAll();\n    final List<BookResource> bookResources = books.stream().map(BookResource::new).collect(Collectors.toList());\n    return bookResources;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "findAll",
        "arguments" : [ ]
      }, {
        "name" : "collect",
        "arguments" : [ "Collectors.toList()" ]
      }, {
        "name" : "map",
        "arguments" : [ "BookResource::new" ]
      }, {
        "name" : "stream",
        "arguments" : [ ]
      }, {
        "name" : "toList",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "repo", "books", "Collectors", "bookResources" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "List<BookResource>",
      "description" : null,
      "methodDefinition" : "@RequestMapping(method = RequestMethod.GET)\npublic List<BookResource> findAll() {\n    final List<Book> books = (List<Book>) repo.findAll();\n    final List<BookResource> bookResources = books.stream().map(BookResource::new).collect(Collectors.toList());\n    return bookResources;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "findAllSummary",
      "body" : "{\n    final List<Book> books = (List<Book>) repo.findAll();\n    final List<BookResource> bookResources = books.stream().map(BookResource::new).collect(Collectors.toList());\n    return bookResources;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "findAll",
        "arguments" : [ ]
      }, {
        "name" : "collect",
        "arguments" : [ "Collectors.toList()" ]
      }, {
        "name" : "map",
        "arguments" : [ "BookResource::new" ]
      }, {
        "name" : "stream",
        "arguments" : [ ]
      }, {
        "name" : "toList",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "repo", "books", "Collectors", "bookResources" ],
      "annotations" : [ "JsonView", "RequestMapping" ],
      "returnType" : "List<BookResource>",
      "description" : null,
      "methodDefinition" : "@JsonView(BookView.Summary.class)\n@RequestMapping(method = RequestMethod.GET, params = \"summary\")\npublic List<BookResource> findAllSummary() {\n    final List<Book> books = (List<Book>) repo.findAll();\n    final List<BookResource> bookResources = books.stream().map(BookResource::new).collect(Collectors.toList());\n    return bookResources;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "create",
      "body" : "{\n    repo.save(newBook.getBook());\n}",
      "arguments" : [ "@RequestBody BookResource newBook" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "save",
        "arguments" : [ "newBook.getBook()" ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "repo", "newBook" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "// write\n@RequestMapping(method = RequestMethod.POST)\npublic void create(@RequestBody BookResource newBook) {\n    repo.save(newBook.getBook());\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "repo",
      "accessModifier" : "private",
      "value" : null,
      "type" : "BookRepository",
      "description" : null
    } ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/RootController.java",
  "packageName" : "com.baeldung.web.controller",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMapping"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMethod"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RestController"
  }, {
    "dereferencedParts" : [ {
      "name" : "RootResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ {
        "name" : "RootResource",
        "body" : "{\n    this.add(linkTo(BookController.class).withRel(\"books\"));\n    this.add(linkTo(CartController.class).withRel(\"cart\"));\n    // this.add(linkTo(methodOn(BookController.class).findAll()).withRel(\"books\"));\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(BookController.class).withRel(\"books\")" ]
        }, {
          "name" : "withRel",
          "arguments" : [ "\"books\"" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "BookController.class" ]
        }, {
          "name" : "add",
          "arguments" : [ "linkTo(CartController.class).withRel(\"cart\")" ]
        }, {
          "name" : "withRel",
          "arguments" : [ "\"cart\"" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "CartController.class" ]
        } ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public RootResource() {\n    this.add(linkTo(BookController.class).withRel(\"books\"));\n    this.add(linkTo(CartController.class).withRel(\"cart\"));\n    // this.add(linkTo(methodOn(BookController.class).findAll()).withRel(\"books\"));\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.BookController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.CartController"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/RootResource.java",
    "name" : "com.baeldung.web.resource.RootResource"
  } ],
  "entities" : [ {
    "name" : "RootController",
    "description" : null,
    "annotations" : [ "RestController" ],
    "methods" : [ {
      "name" : "root",
      "body" : "{\n    return new RootResource();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "RequestMethod" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "RootResource",
      "description" : null,
      "methodDefinition" : "@RequestMapping(value = \"\", method = RequestMethod.GET)\npublic RootResource root() {\n    return new RootResource();\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/RootController.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewBookController.java",
  "packageName" : "com.baeldung.web.controller",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.stream.Collectors"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.beans.factory.annotation.Autowired"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.http.converter.json.MappingJacksonValue"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.PathVariable"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestBody"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMapping"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestMethod"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RequestParam"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.RestController"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookView",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : [ "Summary" ],
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    }, {
      "name" : "Summary",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/BookView.java",
    "name" : "com.baeldung.model.BookView"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookRepository",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "findByIsbn",
        "body" : "{\n}",
        "arguments" : [ "final String isbn" ],
        "accessModifier" : "",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "Book findByIsbn(final String isbn);"
      } ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.data.repository.CrudRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/persistence/BookRepository.java",
    "name" : "com.baeldung.persistence.BookRepository"
  }, {
    "dereferencedParts" : [ {
      "name" : "Checks",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "checkEntityExists",
        "body" : "{\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}",
        "arguments" : [ "T entity", "final String message" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "entity", "message" ],
        "annotations" : [ ],
        "returnType" : "T",
        "description" : null,
        "methodDefinition" : "// \npublic static final <T> T checkEntityExists(T entity, final String message) {\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}"
      } ],
      "fields" : [ ],
      "constructors" : [ {
        "name" : "Checks",
        "body" : "{\n    super();\n}",
        "arguments" : [ ],
        "accessModifier" : "private",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "private Checks() {\n    super();\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.EntityNotFoundException"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/Checks.java",
    "name" : "com.baeldung.web.error.Checks"
  }, {
    "dereferencedParts" : [ {
      "name" : "NewBookResource",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "getBook",
        "body" : "{\n    return book;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonFilter" ],
        "returnType" : "Book",
        "description" : null,
        "methodDefinition" : "// \n@JsonFilter(\"bookFilter\")\npublic Book getBook() {\n    return book;\n}"
      } ],
      "fields" : [ {
        "name" : "book",
        "accessModifier" : "private final",
        "value" : null,
        "type" : "Book",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "NewBookResource",
        "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
        "arguments" : [ "@NotNull final Book book" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "add",
          "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
        }, {
          "name" : "withSelfRel",
          "arguments" : [ ]
        }, {
          "name" : "slash",
          "arguments" : [ "book.getIsbn()" ]
        }, {
          "name" : "linkTo",
          "arguments" : [ "BookController.class" ]
        }, {
          "name" : "getIsbn",
          "arguments" : [ ]
        } ],
        "usedEntities" : [ "book" ],
        "annotations" : [ "JsonCreator" ],
        "description" : null,
        "methodDefinition" : "@JsonCreator\npublic NewBookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.validation.constraints.NotNull"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.ResourceSupport"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.controller.BookController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonCreator"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonFilter"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewBookResource.java",
    "name" : "com.baeldung.web.resource.NewBookResource"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonView"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.databind.ser.FilterProvider"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider"
  } ],
  "entities" : [ {
    "name" : "NewBookController",
    "description" : null,
    "annotations" : [ "RestController", "RequestMapping" ],
    "methods" : [ {
      "name" : "findByIsbn",
      "body" : "{\n    final Book book = Checks.checkEntityExists(repo.findByIsbn(isbn), \"No book found for isbn = \" + isbn);\n    final NewBookResource bookResource = new NewBookResource(book);\n    bookResource.add(linkTo(methodOn(CartController.class).addNewBookToCart(bookResource)).withRel(\"add-to-cart\"));\n    final FilterProvider filterProvider = new SimpleFilterProvider().addFilter(\"bookFilter\", SimpleBeanPropertyFilter.serializeAll());\n    final MappingJacksonValue wrapper = new MappingJacksonValue(bookResource);\n    wrapper.setFilters(filterProvider);\n    return wrapper;\n}",
      "arguments" : [ "@PathVariable final String isbn" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "checkEntityExists",
        "arguments" : [ "repo.findByIsbn(isbn)", "\"No book found for isbn = \" + isbn" ]
      }, {
        "name" : "findByIsbn",
        "arguments" : [ "isbn" ]
      }, {
        "name" : "add",
        "arguments" : [ "linkTo(methodOn(CartController.class).addNewBookToCart(bookResource)).withRel(\"add-to-cart\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"add-to-cart\"" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "methodOn(CartController.class).addNewBookToCart(bookResource)" ]
      }, {
        "name" : "addNewBookToCart",
        "arguments" : [ "bookResource" ]
      }, {
        "name" : "methodOn",
        "arguments" : [ "CartController.class" ]
      }, {
        "name" : "addFilter",
        "arguments" : [ "\"bookFilter\"", "SimpleBeanPropertyFilter.serializeAll()" ]
      }, {
        "name" : "serializeAll",
        "arguments" : [ ]
      }, {
        "name" : "setFilters",
        "arguments" : [ "filterProvider" ]
      } ],
      "usedEntities" : [ "Checks", "repo", "isbn", "book", "bookResource", "SimpleBeanPropertyFilter", "wrapper", "filterProvider" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "MappingJacksonValue",
      "description" : null,
      "methodDefinition" : "// read\n@RequestMapping(\"/{isbn}\")\npublic MappingJacksonValue findByIsbn(@PathVariable final String isbn) {\n    final Book book = Checks.checkEntityExists(repo.findByIsbn(isbn), \"No book found for isbn = \" + isbn);\n    final NewBookResource bookResource = new NewBookResource(book);\n    bookResource.add(linkTo(methodOn(CartController.class).addNewBookToCart(bookResource)).withRel(\"add-to-cart\"));\n    final FilterProvider filterProvider = new SimpleFilterProvider().addFilter(\"bookFilter\", SimpleBeanPropertyFilter.serializeAll());\n    final MappingJacksonValue wrapper = new MappingJacksonValue(bookResource);\n    wrapper.setFilters(filterProvider);\n    return wrapper;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewBookController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "findByIsbnFiltered",
      "body" : "{\n    final Book book = Checks.checkEntityExists(repo.findByIsbn(isbn), \"No book found for isbn = \" + isbn);\n    final NewBookResource bookResource = new NewBookResource(book);\n    bookResource.add(linkTo(methodOn(CartController.class).addNewBookToCart(bookResource)).withRel(\"add-to-cart\"));\n    final FilterProvider filterProvider = new SimpleFilterProvider().addFilter(\"bookFilter\", SimpleBeanPropertyFilter.filterOutAllExcept(fields));\n    final MappingJacksonValue wrapper = new MappingJacksonValue(bookResource);\n    wrapper.setFilters(filterProvider);\n    return wrapper;\n}",
      "arguments" : [ "@RequestParam String fields", "@PathVariable final String isbn" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "checkEntityExists",
        "arguments" : [ "repo.findByIsbn(isbn)", "\"No book found for isbn = \" + isbn" ]
      }, {
        "name" : "findByIsbn",
        "arguments" : [ "isbn" ]
      }, {
        "name" : "add",
        "arguments" : [ "linkTo(methodOn(CartController.class).addNewBookToCart(bookResource)).withRel(\"add-to-cart\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"add-to-cart\"" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "methodOn(CartController.class).addNewBookToCart(bookResource)" ]
      }, {
        "name" : "addNewBookToCart",
        "arguments" : [ "bookResource" ]
      }, {
        "name" : "methodOn",
        "arguments" : [ "CartController.class" ]
      }, {
        "name" : "addFilter",
        "arguments" : [ "\"bookFilter\"", "SimpleBeanPropertyFilter.filterOutAllExcept(fields)" ]
      }, {
        "name" : "filterOutAllExcept",
        "arguments" : [ "fields" ]
      }, {
        "name" : "setFilters",
        "arguments" : [ "filterProvider" ]
      } ],
      "usedEntities" : [ "Checks", "repo", "isbn", "book", "bookResource", "SimpleBeanPropertyFilter", "fields", "wrapper", "filterProvider" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "MappingJacksonValue",
      "description" : null,
      "methodDefinition" : "@RequestMapping(value = \"/{isbn}\", params = \"fields\")\npublic MappingJacksonValue findByIsbnFiltered(@RequestParam String fields, @PathVariable final String isbn) {\n    final Book book = Checks.checkEntityExists(repo.findByIsbn(isbn), \"No book found for isbn = \" + isbn);\n    final NewBookResource bookResource = new NewBookResource(book);\n    bookResource.add(linkTo(methodOn(CartController.class).addNewBookToCart(bookResource)).withRel(\"add-to-cart\"));\n    final FilterProvider filterProvider = new SimpleFilterProvider().addFilter(\"bookFilter\", SimpleBeanPropertyFilter.filterOutAllExcept(fields));\n    final MappingJacksonValue wrapper = new MappingJacksonValue(bookResource);\n    wrapper.setFilters(filterProvider);\n    return wrapper;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewBookController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "findAll",
      "body" : "{\n    final List<Book> books = (List<Book>) repo.findAll();\n    final List<NewBookResource> bookResources = books.stream().map(NewBookResource::new).collect(Collectors.toList());\n    return bookResources;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "findAll",
        "arguments" : [ ]
      }, {
        "name" : "collect",
        "arguments" : [ "Collectors.toList()" ]
      }, {
        "name" : "map",
        "arguments" : [ "NewBookResource::new" ]
      }, {
        "name" : "stream",
        "arguments" : [ ]
      }, {
        "name" : "toList",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "repo", "books", "Collectors", "bookResources" ],
      "annotations" : [ "JsonView", "RequestMapping" ],
      "returnType" : "List<NewBookResource>",
      "description" : null,
      "methodDefinition" : "@JsonView(BookView.Summary.class)\n@RequestMapping(method = RequestMethod.GET)\npublic List<NewBookResource> findAll() {\n    final List<Book> books = (List<Book>) repo.findAll();\n    final List<NewBookResource> bookResources = books.stream().map(NewBookResource::new).collect(Collectors.toList());\n    return bookResources;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewBookController.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "create",
      "body" : "{\n    repo.save(newBook.getBook());\n}",
      "arguments" : [ "@RequestBody NewBookResource newBook" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "save",
        "arguments" : [ "newBook.getBook()" ]
      }, {
        "name" : "getBook",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "RequestMethod", "repo", "newBook" ],
      "annotations" : [ "RequestMapping" ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "// write\n@RequestMapping(method = RequestMethod.POST)\npublic void create(@RequestBody NewBookResource newBook) {\n    repo.save(newBook.getBook());\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewBookController.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "repo",
      "accessModifier" : "private",
      "value" : null,
      "type" : "BookRepository",
      "description" : null
    } ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/Checks.java",
  "packageName" : "com.baeldung.web.error",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "javax.persistence.EntityNotFoundException"
  } ],
  "entities" : [ {
    "name" : "Checks",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "checkEntityExists",
      "body" : "{\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}",
      "arguments" : [ "T entity", "final String message" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "entity", "message" ],
      "annotations" : [ ],
      "returnType" : "T",
      "description" : null,
      "methodDefinition" : "// \npublic static final <T> T checkEntityExists(T entity, final String message) {\n    if (entity == null) {\n        throw new EntityNotFoundException(message);\n    }\n    return entity;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/Checks.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ ],
    "constructors" : [ {
      "name" : "Checks",
      "body" : "{\n    super();\n}",
      "arguments" : [ ],
      "accessModifier" : "private",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "private Checks() {\n    super();\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
  "packageName" : "com.baeldung.web.error",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "java.util.Arrays"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.http.HttpStatus"
  } ],
  "entities" : [ {
    "name" : "ApiError",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "getStatus",
      "body" : "{\n    return status;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "status" ],
      "annotations" : [ ],
      "returnType" : "HttpStatus",
      "description" : null,
      "methodDefinition" : "// \npublic HttpStatus getStatus() {\n    return status;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setStatus",
      "body" : "{\n    this.status = status;\n}",
      "arguments" : [ "HttpStatus status" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "status" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setStatus(HttpStatus status) {\n    this.status = status;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "getMessage",
      "body" : "{\n    return message;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "message" ],
      "annotations" : [ ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "public String getMessage() {\n    return message;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setMessage",
      "body" : "{\n    this.message = message;\n}",
      "arguments" : [ "String message" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "message" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setMessage(String message) {\n    this.message = message;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "getErrors",
      "body" : "{\n    return errors;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "errors" ],
      "annotations" : [ ],
      "returnType" : "List<String>",
      "description" : null,
      "methodDefinition" : "public List<String> getErrors() {\n    return errors;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setErrors",
      "body" : "{\n    this.errors = errors;\n}",
      "arguments" : [ "List<String> errors" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "errors" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setErrors(List<String> errors) {\n    this.errors = errors;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "status",
      "accessModifier" : "private",
      "value" : null,
      "type" : "HttpStatus",
      "description" : null
    }, {
      "name" : "message",
      "accessModifier" : "private",
      "value" : null,
      "type" : "String",
      "description" : null
    }, {
      "name" : "errors",
      "accessModifier" : "private",
      "value" : null,
      "type" : "List<String>",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "ApiError",
      "body" : "{\n    super();\n    this.status = status;\n    this.message = message;\n    this.errors = errors;\n}",
      "arguments" : [ "HttpStatus status", "String message", "List<String> errors" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "status", "message", "errors" ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public ApiError(HttpStatus status, String message, List<String> errors) {\n    super();\n    this.status = status;\n    this.message = message;\n    this.errors = errors;\n}"
    }, {
      "name" : "ApiError",
      "body" : "{\n    super();\n    this.status = status;\n    this.message = message;\n    errors = Arrays.asList(error);\n}",
      "arguments" : [ "HttpStatus status", "String message", "String error" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "asList",
        "arguments" : [ "error" ]
      } ],
      "usedEntities" : [ "status", "message", "errors", "Arrays", "error" ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public ApiError(HttpStatus status, String message, String error) {\n    super();\n    this.status = status;\n    this.message = message;\n    errors = Arrays.asList(error);\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/GlobalExceptionHandlerController.java",
  "packageName" : "com.baeldung.web.error",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "javax.persistence.EntityNotFoundException"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.http.HttpHeaders"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.http.HttpStatus"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.http.ResponseEntity"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.ControllerAdvice"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.bind.annotation.ExceptionHandler"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler"
  } ],
  "entities" : [ {
    "name" : "GlobalExceptionHandlerController",
    "description" : null,
    "annotations" : [ "ControllerAdvice" ],
    "methods" : [ {
      "name" : "handleEntityNotFoundException",
      "body" : "{\n    final ApiError apiError = new ApiError(HttpStatus.NOT_FOUND, ex.getLocalizedMessage(), \"test\");\n    return new ResponseEntity<ApiError>(apiError, new HttpHeaders(), apiError.getStatus());\n}",
      "arguments" : [ "EntityNotFoundException ex" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "getLocalizedMessage",
        "arguments" : [ ]
      }, {
        "name" : "getStatus",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "HttpStatus", "ex", "apiError" ],
      "annotations" : [ "ExceptionHandler" ],
      "returnType" : "ResponseEntity<ApiError>",
      "description" : null,
      "methodDefinition" : "// \n@ExceptionHandler({ EntityNotFoundException.class })\npublic ResponseEntity<ApiError> handleEntityNotFoundException(EntityNotFoundException ex) {\n    final ApiError apiError = new ApiError(HttpStatus.NOT_FOUND, ex.getLocalizedMessage(), \"test\");\n    return new ResponseEntity<ApiError>(apiError, new HttpHeaders(), apiError.getStatus());\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/GlobalExceptionHandlerController.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ ],
    "constructors" : [ {
      "name" : "GlobalExceptionHandlerController",
      "body" : "{\n    super();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public GlobalExceptionHandlerController() {\n    super();\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ {
    "imports" : [ {
      "dereferencedParts" : [ ],
      "name" : "java.util.Arrays"
    }, {
      "dereferencedParts" : [ ],
      "name" : "java.util.List"
    }, {
      "dereferencedParts" : [ ],
      "name" : "org.springframework.http.HttpStatus"
    } ],
    "entities" : [ {
      "name" : "ApiError",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ {
        "name" : "getStatus",
        "body" : "{\n    return status;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "status" ],
        "annotations" : [ ],
        "returnType" : "HttpStatus",
        "description" : null,
        "methodDefinition" : "// \npublic HttpStatus getStatus() {\n    return status;\n}"
      }, {
        "name" : "setStatus",
        "body" : "{\n    this.status = status;\n}",
        "arguments" : [ "HttpStatus status" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "status" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setStatus(HttpStatus status) {\n    this.status = status;\n}"
      }, {
        "name" : "getMessage",
        "body" : "{\n    return message;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "message" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getMessage() {\n    return message;\n}"
      }, {
        "name" : "setMessage",
        "body" : "{\n    this.message = message;\n}",
        "arguments" : [ "String message" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "message" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setMessage(String message) {\n    this.message = message;\n}"
      }, {
        "name" : "getErrors",
        "body" : "{\n    return errors;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "errors" ],
        "annotations" : [ ],
        "returnType" : "List<String>",
        "description" : null,
        "methodDefinition" : "public List<String> getErrors() {\n    return errors;\n}"
      }, {
        "name" : "setErrors",
        "body" : "{\n    this.errors = errors;\n}",
        "arguments" : [ "List<String> errors" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "errors" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setErrors(List<String> errors) {\n    this.errors = errors;\n}"
      } ],
      "fields" : [ {
        "name" : "status",
        "accessModifier" : "private",
        "value" : null,
        "type" : "HttpStatus",
        "description" : null
      }, {
        "name" : "message",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "errors",
        "accessModifier" : "private",
        "value" : null,
        "type" : "List<String>",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "ApiError",
        "body" : "{\n    super();\n    this.status = status;\n    this.message = message;\n    this.errors = errors;\n}",
        "arguments" : [ "HttpStatus status", "String message", "List<String> errors" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "status", "message", "errors" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public ApiError(HttpStatus status, String message, List<String> errors) {\n    super();\n    this.status = status;\n    this.message = message;\n    this.errors = errors;\n}"
      }, {
        "name" : "ApiError",
        "body" : "{\n    super();\n    this.status = status;\n    this.message = message;\n    errors = Arrays.asList(error);\n}",
        "arguments" : [ "HttpStatus status", "String message", "String error" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "asList",
          "arguments" : [ "error" ]
        } ],
        "usedEntities" : [ "status", "message", "errors", "Arrays", "error" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public ApiError(HttpStatus status, String message, String error) {\n    super();\n    this.status = status;\n    this.message = message;\n    errors = Arrays.asList(error);\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC"
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/error/ApiError.java"
  } ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/RootResource.java",
  "packageName" : "com.baeldung.web.resource",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.ResourceSupport"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookController",
      "description" : null,
      "annotations" : [ "RestController", "RequestMapping" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "repo",
        "accessModifier" : "private",
        "value" : null,
        "type" : "BookRepository",
        "description" : null
      } ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.stream.Collectors"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.annotation.Autowired"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.PathVariable"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestBody"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMethod"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RestController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.persistence.BookRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.error.Checks"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.BookResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
    "name" : "com.baeldung.web.controller.BookController"
  }, {
    "dereferencedParts" : [ {
      "name" : "CartController",
      "description" : null,
      "annotations" : [ "RestController", "RequestMapping" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "cart",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Cart",
        "description" : null
      }, {
        "name" : "bookRepo",
        "accessModifier" : "private",
        "value" : null,
        "type" : "BookRepository",
        "description" : null
      } ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.InitializingBean"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.annotation.Autowired"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestBody"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMethod"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RestController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Cart"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.persistence.BookRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.error.Checks"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.BookResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.CartResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.NewBookResource"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
    "name" : "com.baeldung.web.controller.CartController"
  } ],
  "entities" : [ {
    "name" : "RootResource",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ ],
    "fields" : [ ],
    "constructors" : [ {
      "name" : "RootResource",
      "body" : "{\n    this.add(linkTo(BookController.class).withRel(\"books\"));\n    this.add(linkTo(CartController.class).withRel(\"cart\"));\n    // this.add(linkTo(methodOn(BookController.class).findAll()).withRel(\"books\"));\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "add",
        "arguments" : [ "linkTo(BookController.class).withRel(\"books\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"books\"" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "BookController.class" ]
      }, {
        "name" : "add",
        "arguments" : [ "linkTo(CartController.class).withRel(\"cart\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"cart\"" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "CartController.class" ]
      } ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public RootResource() {\n    this.add(linkTo(BookController.class).withRel(\"books\"));\n    this.add(linkTo(CartController.class).withRel(\"cart\"));\n    // this.add(linkTo(methodOn(BookController.class).findAll()).withRel(\"books\"));\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewBookResource.java",
  "packageName" : "com.baeldung.web.resource",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "javax.validation.constraints.NotNull"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.ResourceSupport"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ {
        "name" : "getIsbn",
        "body" : "{\n    return isbn;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "isbn" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getIsbn() {\n    return isbn;\n}"
      } ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookView",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : [ "Summary" ],
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    }, {
      "name" : "Summary",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/BookView.java",
    "name" : "com.baeldung.model.BookView"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookController",
      "description" : null,
      "annotations" : [ "RestController", "RequestMapping" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "repo",
        "accessModifier" : "private",
        "value" : null,
        "type" : "BookRepository",
        "description" : null
      } ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.stream.Collectors"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.annotation.Autowired"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.PathVariable"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestBody"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMethod"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RestController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.persistence.BookRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.error.Checks"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.BookResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
    "name" : "com.baeldung.web.controller.BookController"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonCreator"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonFilter"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonView"
  } ],
  "entities" : [ {
    "name" : "NewBookResource",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "getBook",
      "body" : "{\n    return book;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "book" ],
      "annotations" : [ "JsonFilter" ],
      "returnType" : "Book",
      "description" : null,
      "methodDefinition" : "// \n@JsonFilter(\"bookFilter\")\npublic Book getBook() {\n    return book;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewBookResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "toString",
      "body" : "{\n    return \"BookResource [book=\" + book + \", toString()=\" + super.toString() + \"]\";\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "toString",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "book" ],
      "annotations" : [ "Override" ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "@Override\npublic String toString() {\n    return \"BookResource [book=\" + book + \", toString()=\" + super.toString() + \"]\";\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewBookResource.java",
      "test_exists" : true,
      "test_functions" : {
        "/home/info/spring-hypermedia-api/src/test/java/com/baeldung/persistence/BookRepositoryTest.java" : {
          "persisting" : {
            "definition" : "@Test\npublic void persisting() {\n    Book book1 = new Book();\n    book1.setAuthor(\"Author1\");\n    book1.setTitle(\"Title1\");\n    book1.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book1);\n    Book book2 = new Book();\n    book2.setAuthor(\"Author2\");\n    book2.setTitle(\"Title2\");\n    book2.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book2);\n}"
          }
        }
      }
    } ],
    "fields" : [ {
      "name" : "book",
      "accessModifier" : "private final",
      "value" : null,
      "type" : "Book",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "NewBookResource",
      "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
      "arguments" : [ "@NotNull final Book book" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "add",
        "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
      }, {
        "name" : "withSelfRel",
        "arguments" : [ ]
      }, {
        "name" : "slash",
        "arguments" : [ "book.getIsbn()" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "BookController.class" ]
      }, {
        "name" : "getIsbn",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "book" ],
      "annotations" : [ "JsonCreator" ],
      "description" : null,
      "methodDefinition" : "@JsonCreator\npublic NewBookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewCartResource.java",
  "packageName" : "com.baeldung.web.resource",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.Link"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.ResourceSupport"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.Resources"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "NewCartController",
      "description" : null,
      "annotations" : [ "RestController", "RequestMapping" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "books",
        "accessModifier" : "private",
        "value" : null,
        "type" : "List<Book>",
        "description" : null
      }, {
        "name" : "cartPurchased",
        "accessModifier" : "private",
        "value" : null,
        "type" : "boolean",
        "description" : null
      }, {
        "name" : "bookRepo",
        "accessModifier" : "private",
        "value" : null,
        "type" : "BookRepository",
        "description" : null
      } ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.stream.Collectors"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.annotation.Autowired"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.Link"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.http.HttpStatus"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestBody"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMethod"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.ResponseStatus"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RestController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.persistence.BookRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.error.Checks"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.BookResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.CartResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.NewCartResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "jersey.repackaged.com.google.common.collect.Lists"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/NewCartController.java",
    "name" : "com.baeldung.web.controller.NewCartController"
  }, {
    "dereferencedParts" : [ ],
    "name" : "jersey.repackaged.com.google.common.collect.Lists"
  } ],
  "entities" : [ {
    "name" : "NewCartResource",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "getBooks",
      "body" : "{\n    return books;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "books" ],
      "annotations" : [ ],
      "returnType" : "Resources<Book>",
      "description" : null,
      "methodDefinition" : "// \npublic Resources<Book> getBooks() {\n    return books;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewCartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "isPurchased",
      "body" : "{\n    return purchased;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "purchased" ],
      "annotations" : [ ],
      "returnType" : "boolean",
      "description" : null,
      "methodDefinition" : "public boolean isPurchased() {\n    return purchased;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewCartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setPurchased",
      "body" : "{\n    this.purchased = purchased;\n}",
      "arguments" : [ "boolean purchased" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "purchased" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setPurchased(boolean purchased) {\n    this.purchased = purchased;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/NewCartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "books",
      "accessModifier" : "private final",
      "value" : null,
      "type" : "Resources<Book>",
      "description" : null
    }, {
      "name" : "purchased",
      "accessModifier" : "private",
      "value" : null,
      "type" : "boolean",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "NewCartResource",
      "body" : "{\n    super();\n    this.books = new Resources<Book>(books, Lists.newArrayList());\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}",
      "arguments" : [ "final Iterable<Book> books", "final boolean purchased" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "newArrayList",
        "arguments" : [ ]
      }, {
        "name" : "add",
        "arguments" : [ "linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel()" ]
      }, {
        "name" : "withSelfRel",
        "arguments" : [ ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "methodOn(NewCartController.class).seeYourCart()" ]
      }, {
        "name" : "seeYourCart",
        "arguments" : [ ]
      }, {
        "name" : "methodOn",
        "arguments" : [ "NewCartController.class" ]
      } ],
      "usedEntities" : [ "books", "Lists", "purchased" ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public NewCartResource(final Iterable<Book> books, final boolean purchased) {\n    super();\n    this.books = new Resources<Book>(books, Lists.newArrayList());\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}"
    }, {
      "name" : "NewCartResource",
      "body" : "{\n    super();\n    this.books = new Resources<Book>(books, links);\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}",
      "arguments" : [ "final Iterable<Book> books", "final List<Link> links", "final boolean purchased" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "add",
        "arguments" : [ "linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel()" ]
      }, {
        "name" : "withSelfRel",
        "arguments" : [ ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "methodOn(NewCartController.class).seeYourCart()" ]
      }, {
        "name" : "seeYourCart",
        "arguments" : [ ]
      }, {
        "name" : "methodOn",
        "arguments" : [ "NewCartController.class" ]
      } ],
      "usedEntities" : [ "books", "links", "purchased" ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public NewCartResource(final Iterable<Book> books, final List<Link> links, final boolean purchased) {\n    super();\n    this.books = new Resources<Book>(books, links);\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(NewCartController.class).seeYourCart()).withSelfRel());\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
  "packageName" : "com.baeldung.web.resource",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.BasicLinkBuilder.linkToCurrentMapping"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.Link"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.ResourceSupport"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "CartController",
      "description" : null,
      "annotations" : [ "RestController", "RequestMapping" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "cart",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Cart",
        "description" : null
      }, {
        "name" : "bookRepo",
        "accessModifier" : "private",
        "value" : null,
        "type" : "BookRepository",
        "description" : null
      } ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.InitializingBean"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.annotation.Autowired"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestBody"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMethod"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RestController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Cart"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.persistence.BookRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.error.Checks"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.BookResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.CartResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.NewBookResource"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/CartController.java",
    "name" : "com.baeldung.web.controller.CartController"
  } ],
  "entities" : [ {
    "name" : "CartResource",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "setBooks",
      "body" : "{\n    this.books = books;\n}",
      "arguments" : [ "final List<Book> books" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "books" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "// \npublic void setBooks(final List<Book> books) {\n    this.books = books;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "getBooks",
      "body" : "{\n    return books;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "books" ],
      "annotations" : [ ],
      "returnType" : "List<Book>",
      "description" : null,
      "methodDefinition" : "public List<Book> getBooks() {\n    return books;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "isPurchased",
      "body" : "{\n    return purchased;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "purchased" ],
      "annotations" : [ ],
      "returnType" : "boolean",
      "description" : null,
      "methodDefinition" : "public boolean isPurchased() {\n    return purchased;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setPurchased",
      "body" : "{\n    this.purchased = purchased;\n}",
      "arguments" : [ "boolean purchased" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "purchased" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setPurchased(boolean purchased) {\n    this.purchased = purchased;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/CartResource.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "books",
      "accessModifier" : "private",
      "value" : null,
      "type" : "List<Book>",
      "description" : null
    }, {
      "name" : "purchased",
      "accessModifier" : "private",
      "value" : null,
      "type" : "boolean",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "CartResource",
      "body" : "{\n    super();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public CartResource() {\n    super();\n}"
    }, {
      "name" : "CartResource",
      "body" : "{\n    super();\n    this.books = books;\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel());\n    if (!purchased && !this.books.isEmpty()) {\n        Link clearLink = null;\n        try {\n            clearLink = linkTo(CartController.class, CartController.class.getMethod(\"clearYourCart\")).withRel(\"clear\");\n        } catch (NoSuchMethodException | SecurityException e) {\n            e.printStackTrace();\n        }\n        this.add(clearLink);\n    }\n    if (purchased) {\n        this.add(linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\"));\n    }\n}",
      "arguments" : [ "final List<Book> books", "final boolean purchased" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "add",
        "arguments" : [ "linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel()" ]
      }, {
        "name" : "withSelfRel",
        "arguments" : [ ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "methodOn(CartController.class).seeYourCart()" ]
      }, {
        "name" : "seeYourCart",
        "arguments" : [ ]
      }, {
        "name" : "methodOn",
        "arguments" : [ "CartController.class" ]
      }, {
        "name" : "isEmpty",
        "arguments" : [ ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"clear\"" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "CartController.class", "CartController.class.getMethod(\"clearYourCart\")" ]
      }, {
        "name" : "getMethod",
        "arguments" : [ "\"clearYourCart\"" ]
      }, {
        "name" : "printStackTrace",
        "arguments" : [ ]
      }, {
        "name" : "add",
        "arguments" : [ "clearLink" ]
      }, {
        "name" : "add",
        "arguments" : [ "linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\")" ]
      }, {
        "name" : "withRel",
        "arguments" : [ "\"receipt\"" ]
      }, {
        "name" : "slash",
        "arguments" : [ "randomAlphanumeric(6)" ]
      }, {
        "name" : "slash",
        "arguments" : [ "\"/receipt\"" ]
      }, {
        "name" : "linkToCurrentMapping",
        "arguments" : [ ]
      }, {
        "name" : "randomAlphanumeric",
        "arguments" : [ "6" ]
      } ],
      "usedEntities" : [ "books", "purchased", "clearLink", "e" ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public CartResource(final List<Book> books, final boolean purchased) {\n    super();\n    this.books = books;\n    this.purchased = purchased;\n    this.add(linkTo(methodOn(CartController.class).seeYourCart()).withSelfRel());\n    if (!purchased && !this.books.isEmpty()) {\n        Link clearLink = null;\n        try {\n            clearLink = linkTo(CartController.class, CartController.class.getMethod(\"clearYourCart\")).withRel(\"clear\");\n        } catch (NoSuchMethodException | SecurityException e) {\n            e.printStackTrace();\n        }\n        this.add(clearLink);\n    }\n    if (purchased) {\n        this.add(linkToCurrentMapping().slash(\"/receipt\").slash(randomAlphanumeric(6)).withRel(\"receipt\"));\n    }\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/BookResource.java",
  "packageName" : "com.baeldung.web.resource",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
  }, {
    "dereferencedParts" : [ ],
    "name" : "javax.validation.constraints.NotNull"
  }, {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.hateoas.ResourceSupport"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ {
        "name" : "getIsbn",
        "body" : "{\n    return isbn;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "isbn" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getIsbn() {\n    return isbn;\n}"
      } ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookView",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : [ "Summary" ],
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    }, {
      "name" : "Summary",
      "description" : null,
      "annotations" : [ ],
      "methods" : [ ],
      "fields" : [ ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/BookView.java",
    "name" : "com.baeldung.model.BookView"
  }, {
    "dereferencedParts" : [ {
      "name" : "BookController",
      "description" : null,
      "annotations" : [ "RestController", "RequestMapping" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "repo",
        "accessModifier" : "private",
        "value" : null,
        "type" : "BookRepository",
        "description" : null
      } ],
      "constructors" : [ ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.linkTo"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.hateoas.mvc.ControllerLinkBuilder.methodOn"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.List"
      }, {
        "dereferencedParts" : [ ],
        "name" : "java.util.stream.Collectors"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.beans.factory.annotation.Autowired"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.PathVariable"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestBody"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMapping"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RequestMethod"
      }, {
        "dereferencedParts" : [ ],
        "name" : "org.springframework.web.bind.annotation.RestController"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.Book"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.model.BookView"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.persistence.BookRepository"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.error.Checks"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.baeldung.web.resource.BookResource"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/controller/BookController.java",
    "name" : "com.baeldung.web.controller.BookController"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonCreator"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonView"
  } ],
  "entities" : [ {
    "name" : "BookResource",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "getBook",
      "body" : "{\n    return book;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "book" ],
      "annotations" : [ ],
      "returnType" : "Book",
      "description" : null,
      "methodDefinition" : "// \npublic Book getBook() {\n    return book;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/BookResource.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "toString",
      "body" : "{\n    return \"BookResource [book=\" + book + \", toString()=\" + super.toString() + \"]\";\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "toString",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "book" ],
      "annotations" : [ "Override" ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "@Override\npublic String toString() {\n    return \"BookResource [book=\" + book + \", toString()=\" + super.toString() + \"]\";\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/web/resource/BookResource.java",
      "test_exists" : true,
      "test_functions" : {
        "/home/info/spring-hypermedia-api/src/test/java/com/baeldung/persistence/BookRepositoryTest.java" : {
          "persisting" : {
            "definition" : "@Test\npublic void persisting() {\n    Book book1 = new Book();\n    book1.setAuthor(\"Author1\");\n    book1.setTitle(\"Title1\");\n    book1.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book1);\n    Book book2 = new Book();\n    book2.setAuthor(\"Author2\");\n    book2.setTitle(\"Title2\");\n    book2.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book2);\n}"
          }
        }
      }
    } ],
    "fields" : [ {
      "name" : "book",
      "accessModifier" : "private final",
      "value" : null,
      "type" : "Book",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "BookResource",
      "body" : "{\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}",
      "arguments" : [ "@NotNull final Book book" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "add",
        "arguments" : [ "linkTo(BookController.class).slash(book.getIsbn()).withSelfRel()" ]
      }, {
        "name" : "withSelfRel",
        "arguments" : [ ]
      }, {
        "name" : "slash",
        "arguments" : [ "book.getIsbn()" ]
      }, {
        "name" : "linkTo",
        "arguments" : [ "BookController.class" ]
      }, {
        "name" : "getIsbn",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "book" ],
      "annotations" : [ "JsonCreator" ],
      "description" : null,
      "methodDefinition" : "@JsonCreator\npublic BookResource(@NotNull final Book book) {\n    this.book = book;\n    // this.add(BasicLinkBuilder.linkToCurrentMapping().slash(\"/books\").slash(book.getIsbn()).withSelfRel());\n    // this.add(linkTo(methodOn(BookController.class, book).findByIsbn(book.getIsbn())).withSelfRel());\n    this.add(linkTo(BookController.class).slash(book.getIsbn()).withSelfRel());\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
  "packageName" : "com.baeldung.model",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "javax.persistence.Column"
  }, {
    "dereferencedParts" : [ ],
    "name" : "javax.persistence.Entity"
  }, {
    "dereferencedParts" : [ ],
    "name" : "javax.persistence.GeneratedValue"
  }, {
    "dereferencedParts" : [ ],
    "name" : "javax.persistence.Id"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
  }, {
    "dereferencedParts" : [ ],
    "name" : "com.fasterxml.jackson.annotation.JsonView"
  } ],
  "entities" : [ {
    "name" : "Book",
    "description" : null,
    "annotations" : [ "Entity" ],
    "methods" : [ {
      "name" : "getId",
      "body" : "{\n    return id;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "id" ],
      "annotations" : [ ],
      "returnType" : "Long",
      "description" : null,
      "methodDefinition" : "// \npublic Long getId() {\n    return id;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setId",
      "body" : "{\n    this.id = id;\n}",
      "arguments" : [ "Long id" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "id" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setId(Long id) {\n    this.id = id;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "getTitle",
      "body" : "{\n    return title;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "title" ],
      "annotations" : [ ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "public String getTitle() {\n    return title;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setTitle",
      "body" : "{\n    this.title = title;\n}",
      "arguments" : [ "String title" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "title" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setTitle(String title) {\n    this.title = title;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : true,
      "test_functions" : {
        "/home/info/spring-hypermedia-api/src/test/java/com/baeldung/persistence/BookRepositoryTest.java" : {
          "persisting" : {
            "definition" : "@Test\npublic void persisting() {\n    Book book1 = new Book();\n    book1.setAuthor(\"Author1\");\n    book1.setTitle(\"Title1\");\n    book1.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book1);\n    Book book2 = new Book();\n    book2.setAuthor(\"Author2\");\n    book2.setTitle(\"Title2\");\n    book2.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book2);\n}"
          }
        }
      }
    }, {
      "name" : "getIsbn",
      "body" : "{\n    return isbn;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "isbn" ],
      "annotations" : [ ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "public String getIsbn() {\n    return isbn;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setIsbn",
      "body" : "{\n    this.isbn = isbn;\n}",
      "arguments" : [ "String isbn" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "isbn" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setIsbn(String isbn) {\n    this.isbn = isbn;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : true,
      "test_functions" : {
        "/home/info/spring-hypermedia-api/src/test/java/com/baeldung/persistence/BookRepositoryTest.java" : {
          "persisting" : {
            "definition" : "@Test\npublic void persisting() {\n    Book book1 = new Book();\n    book1.setAuthor(\"Author1\");\n    book1.setTitle(\"Title1\");\n    book1.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book1);\n    Book book2 = new Book();\n    book2.setAuthor(\"Author2\");\n    book2.setTitle(\"Title2\");\n    book2.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book2);\n}"
          }
        }
      }
    }, {
      "name" : "getAuthor",
      "body" : "{\n    return author;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "author" ],
      "annotations" : [ ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "public String getAuthor() {\n    return author;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setAuthor",
      "body" : "{\n    this.author = author;\n}",
      "arguments" : [ "String author" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "author" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setAuthor(String author) {\n    this.author = author;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : true,
      "test_functions" : {
        "/home/info/spring-hypermedia-api/src/test/java/com/baeldung/persistence/BookRepositoryTest.java" : {
          "persisting" : {
            "definition" : "@Test\npublic void persisting() {\n    Book book1 = new Book();\n    book1.setAuthor(\"Author1\");\n    book1.setTitle(\"Title1\");\n    book1.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book1);\n    Book book2 = new Book();\n    book2.setAuthor(\"Author2\");\n    book2.setTitle(\"Title2\");\n    book2.setIsbn(UUID.randomUUID().toString());\n    bookRepository.save(book2);\n}"
          }
        }
      }
    }, {
      "name" : "getSynopsis",
      "body" : "{\n    return synopsis;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "synopsis" ],
      "annotations" : [ ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "public String getSynopsis() {\n    return synopsis;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setSynopsis",
      "body" : "{\n    this.synopsis = synopsis;\n}",
      "arguments" : [ "String synopsis" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "synopsis" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setSynopsis(String synopsis) {\n    this.synopsis = synopsis;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "getLanguage",
      "body" : "{\n    return language;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "language" ],
      "annotations" : [ ],
      "returnType" : "String",
      "description" : null,
      "methodDefinition" : "public String getLanguage() {\n    return language;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setLanguage",
      "body" : "{\n    this.language = language;\n}",
      "arguments" : [ "String language" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "language" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setLanguage(String language) {\n    this.language = language;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "hashCode",
      "body" : "{\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((author == null) ? 0 : author.hashCode());\n    result = prime * result + ((isbn == null) ? 0 : isbn.hashCode());\n    result = prime * result + ((title == null) ? 0 : title.hashCode());\n    return result;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "hashCode",
        "arguments" : [ ]
      }, {
        "name" : "hashCode",
        "arguments" : [ ]
      }, {
        "name" : "hashCode",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "result", "prime", "author", "isbn", "title" ],
      "annotations" : [ "Override" ],
      "returnType" : "int",
      "description" : null,
      "methodDefinition" : "// \n@Override\npublic int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((author == null) ? 0 : author.hashCode());\n    result = prime * result + ((isbn == null) ? 0 : isbn.hashCode());\n    result = prime * result + ((title == null) ? 0 : title.hashCode());\n    return result;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "equals",
      "body" : "{\n    if (this == obj)\n        return true;\n    if (obj == null)\n        return false;\n    if (getClass() != obj.getClass())\n        return false;\n    Book other = (Book) obj;\n    if (author == null) {\n        if (other.author != null)\n            return false;\n    } else if (!author.equals(other.author))\n        return false;\n    if (isbn == null) {\n        if (other.isbn != null)\n            return false;\n    } else if (!isbn.equals(other.isbn))\n        return false;\n    if (title == null) {\n        if (other.title != null)\n            return false;\n    } else if (!title.equals(other.title))\n        return false;\n    return true;\n}",
      "arguments" : [ "Object obj" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "getClass",
        "arguments" : [ ]
      }, {
        "name" : "getClass",
        "arguments" : [ ]
      }, {
        "name" : "equals",
        "arguments" : [ "other.author" ]
      }, {
        "name" : "equals",
        "arguments" : [ "other.isbn" ]
      }, {
        "name" : "equals",
        "arguments" : [ "other.title" ]
      } ],
      "usedEntities" : [ "obj", "author", "other", "isbn", "title" ],
      "annotations" : [ "Override" ],
      "returnType" : "boolean",
      "description" : null,
      "methodDefinition" : "@Override\npublic boolean equals(Object obj) {\n    if (this == obj)\n        return true;\n    if (obj == null)\n        return false;\n    if (getClass() != obj.getClass())\n        return false;\n    Book other = (Book) obj;\n    if (author == null) {\n        if (other.author != null)\n            return false;\n    } else if (!author.equals(other.author))\n        return false;\n    if (isbn == null) {\n        if (other.isbn != null)\n            return false;\n    } else if (!isbn.equals(other.isbn))\n        return false;\n    if (title == null) {\n        if (other.title != null)\n            return false;\n    } else if (!title.equals(other.title))\n        return false;\n    return true;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "id",
      "accessModifier" : "private",
      "value" : null,
      "type" : "Long",
      "description" : null
    }, {
      "name" : "isbn",
      "accessModifier" : "private",
      "value" : null,
      "type" : "String",
      "description" : null
    }, {
      "name" : "author",
      "accessModifier" : "private",
      "value" : null,
      "type" : "String",
      "description" : null
    }, {
      "name" : "title",
      "accessModifier" : "private",
      "value" : null,
      "type" : "String",
      "description" : null
    }, {
      "name" : "synopsis",
      "accessModifier" : "private",
      "value" : null,
      "type" : "String",
      "description" : null
    }, {
      "name" : "language",
      "accessModifier" : "private",
      "value" : null,
      "type" : "String",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "Book",
      "body" : "{\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public Book() {\n}"
    }, {
      "name" : "Book",
      "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
      "arguments" : [ "final String author", "final String title", "final String isbn" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "author", "title", "isbn" ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/BookView.java",
  "packageName" : "com.baeldung.model",
  "imports" : [ ],
  "entities" : [ {
    "name" : "BookView",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ ],
    "fields" : [ ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : [ "Summary" ],
    "accessSpecifier" : "PUBLIC"
  }, {
    "name" : "Summary",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ ],
    "fields" : [ ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
  "packageName" : "com.baeldung.model",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "java.util.ArrayList"
  }, {
    "dereferencedParts" : [ ],
    "name" : "java.util.List"
  } ],
  "entities" : [ {
    "name" : "Cart",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "getBooks",
      "body" : "{\n    return books;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "books" ],
      "annotations" : [ ],
      "returnType" : "List<Book>",
      "description" : null,
      "methodDefinition" : "// \npublic List<Book> getBooks() {\n    return books;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "isPurchased",
      "body" : "{\n    return purchased;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "purchased" ],
      "annotations" : [ ],
      "returnType" : "boolean",
      "description" : null,
      "methodDefinition" : "public boolean isPurchased() {\n    return purchased;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "setPurchased",
      "body" : "{\n    this.purchased = purchased;\n}",
      "arguments" : [ "boolean purchased" ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ "purchased" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "public void setPurchased(boolean purchased) {\n    this.purchased = purchased;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "add",
      "body" : "{\n    books.add(bookToAdd);\n}",
      "arguments" : [ "final Book bookToAdd" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "add",
        "arguments" : [ "bookToAdd" ]
      } ],
      "usedEntities" : [ "books", "bookToAdd" ],
      "annotations" : [ ],
      "returnType" : "void",
      "description" : null,
      "methodDefinition" : "// \npublic final void add(final Book bookToAdd) {\n    books.add(bookToAdd);\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "hashCode",
      "body" : "{\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((books == null) ? 0 : books.hashCode());\n    result = prime * result + (purchased ? 1231 : 1237);\n    return result;\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "hashCode",
        "arguments" : [ ]
      } ],
      "usedEntities" : [ "result", "prime", "books", "purchased" ],
      "annotations" : [ "Override" ],
      "returnType" : "int",
      "description" : null,
      "methodDefinition" : "// \n@Override\npublic int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((books == null) ? 0 : books.hashCode());\n    result = prime * result + (purchased ? 1231 : 1237);\n    return result;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
      "test_exists" : false,
      "test_functions" : { }
    }, {
      "name" : "equals",
      "body" : "{\n    if (this == obj)\n        return true;\n    if (obj == null)\n        return false;\n    if (getClass() != obj.getClass())\n        return false;\n    Cart other = (Cart) obj;\n    if (books == null) {\n        if (other.books != null)\n            return false;\n    } else if (!books.equals(other.books))\n        return false;\n    if (purchased != other.purchased)\n        return false;\n    return true;\n}",
      "arguments" : [ "Object obj" ],
      "accessModifier" : "public",
      "methodsCalled" : [ {
        "name" : "getClass",
        "arguments" : [ ]
      }, {
        "name" : "getClass",
        "arguments" : [ ]
      }, {
        "name" : "equals",
        "arguments" : [ "other.books" ]
      } ],
      "usedEntities" : [ "obj", "books", "other", "purchased" ],
      "annotations" : [ "Override" ],
      "returnType" : "boolean",
      "description" : null,
      "methodDefinition" : "@Override\npublic boolean equals(Object obj) {\n    if (this == obj)\n        return true;\n    if (obj == null)\n        return false;\n    if (getClass() != obj.getClass())\n        return false;\n    Cart other = (Cart) obj;\n    if (books == null) {\n        if (other.books != null)\n            return false;\n    } else if (!books.equals(other.books))\n        return false;\n    if (purchased != other.purchased)\n        return false;\n    return true;\n}",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Cart.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ {
      "name" : "books",
      "accessModifier" : "private",
      "value" : null,
      "type" : "List<Book>",
      "description" : null
    }, {
      "name" : "purchased",
      "accessModifier" : "private",
      "value" : null,
      "type" : "boolean",
      "description" : null
    } ],
    "constructors" : [ {
      "name" : "Cart",
      "body" : "{\n    this.books = new ArrayList<Book>();\n}",
      "arguments" : [ ],
      "accessModifier" : "public",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "description" : null,
      "methodDefinition" : "public Cart() {\n    this.books = new ArrayList<Book>();\n}"
    } ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ {
    "imports" : [ {
      "dereferencedParts" : [ ],
      "name" : "javax.persistence.Column"
    }, {
      "dereferencedParts" : [ ],
      "name" : "javax.persistence.Entity"
    }, {
      "dereferencedParts" : [ ],
      "name" : "javax.persistence.GeneratedValue"
    }, {
      "dereferencedParts" : [ ],
      "name" : "javax.persistence.Id"
    }, {
      "dereferencedParts" : [ ],
      "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
    }, {
      "dereferencedParts" : [ ],
      "name" : "com.fasterxml.jackson.annotation.JsonView"
    } ],
    "entities" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ {
        "name" : "getId",
        "body" : "{\n    return id;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "id" ],
        "annotations" : [ ],
        "returnType" : "Long",
        "description" : null,
        "methodDefinition" : "// \npublic Long getId() {\n    return id;\n}"
      }, {
        "name" : "setId",
        "body" : "{\n    this.id = id;\n}",
        "arguments" : [ "Long id" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "id" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setId(Long id) {\n    this.id = id;\n}"
      }, {
        "name" : "getTitle",
        "body" : "{\n    return title;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "title" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getTitle() {\n    return title;\n}"
      }, {
        "name" : "setTitle",
        "body" : "{\n    this.title = title;\n}",
        "arguments" : [ "String title" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "title" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setTitle(String title) {\n    this.title = title;\n}"
      }, {
        "name" : "getIsbn",
        "body" : "{\n    return isbn;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "isbn" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getIsbn() {\n    return isbn;\n}"
      }, {
        "name" : "setIsbn",
        "body" : "{\n    this.isbn = isbn;\n}",
        "arguments" : [ "String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "isbn" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setIsbn(String isbn) {\n    this.isbn = isbn;\n}"
      }, {
        "name" : "getAuthor",
        "body" : "{\n    return author;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getAuthor() {\n    return author;\n}"
      }, {
        "name" : "setAuthor",
        "body" : "{\n    this.author = author;\n}",
        "arguments" : [ "String author" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setAuthor(String author) {\n    this.author = author;\n}"
      }, {
        "name" : "getSynopsis",
        "body" : "{\n    return synopsis;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "synopsis" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getSynopsis() {\n    return synopsis;\n}"
      }, {
        "name" : "setSynopsis",
        "body" : "{\n    this.synopsis = synopsis;\n}",
        "arguments" : [ "String synopsis" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "synopsis" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setSynopsis(String synopsis) {\n    this.synopsis = synopsis;\n}"
      }, {
        "name" : "getLanguage",
        "body" : "{\n    return language;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "language" ],
        "annotations" : [ ],
        "returnType" : "String",
        "description" : null,
        "methodDefinition" : "public String getLanguage() {\n    return language;\n}"
      }, {
        "name" : "setLanguage",
        "body" : "{\n    this.language = language;\n}",
        "arguments" : [ "String language" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "language" ],
        "annotations" : [ ],
        "returnType" : "void",
        "description" : null,
        "methodDefinition" : "public void setLanguage(String language) {\n    this.language = language;\n}"
      }, {
        "name" : "hashCode",
        "body" : "{\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((author == null) ? 0 : author.hashCode());\n    result = prime * result + ((isbn == null) ? 0 : isbn.hashCode());\n    result = prime * result + ((title == null) ? 0 : title.hashCode());\n    return result;\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "hashCode",
          "arguments" : [ ]
        }, {
          "name" : "hashCode",
          "arguments" : [ ]
        }, {
          "name" : "hashCode",
          "arguments" : [ ]
        } ],
        "usedEntities" : [ "result", "prime", "author", "isbn", "title" ],
        "annotations" : [ "Override" ],
        "returnType" : "int",
        "description" : null,
        "methodDefinition" : "// \n@Override\npublic int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((author == null) ? 0 : author.hashCode());\n    result = prime * result + ((isbn == null) ? 0 : isbn.hashCode());\n    result = prime * result + ((title == null) ? 0 : title.hashCode());\n    return result;\n}"
      }, {
        "name" : "equals",
        "body" : "{\n    if (this == obj)\n        return true;\n    if (obj == null)\n        return false;\n    if (getClass() != obj.getClass())\n        return false;\n    Book other = (Book) obj;\n    if (author == null) {\n        if (other.author != null)\n            return false;\n    } else if (!author.equals(other.author))\n        return false;\n    if (isbn == null) {\n        if (other.isbn != null)\n            return false;\n    } else if (!isbn.equals(other.isbn))\n        return false;\n    if (title == null) {\n        if (other.title != null)\n            return false;\n    } else if (!title.equals(other.title))\n        return false;\n    return true;\n}",
        "arguments" : [ "Object obj" ],
        "accessModifier" : "public",
        "methodsCalled" : [ {
          "name" : "getClass",
          "arguments" : [ ]
        }, {
          "name" : "getClass",
          "arguments" : [ ]
        }, {
          "name" : "equals",
          "arguments" : [ "other.author" ]
        }, {
          "name" : "equals",
          "arguments" : [ "other.isbn" ]
        }, {
          "name" : "equals",
          "arguments" : [ "other.title" ]
        } ],
        "usedEntities" : [ "obj", "author", "other", "isbn", "title" ],
        "annotations" : [ "Override" ],
        "returnType" : "boolean",
        "description" : null,
        "methodDefinition" : "@Override\npublic boolean equals(Object obj) {\n    if (this == obj)\n        return true;\n    if (obj == null)\n        return false;\n    if (getClass() != obj.getClass())\n        return false;\n    Book other = (Book) obj;\n    if (author == null) {\n        if (other.author != null)\n            return false;\n    } else if (!author.equals(other.author))\n        return false;\n    if (isbn == null) {\n        if (other.isbn != null)\n            return false;\n    } else if (!isbn.equals(other.isbn))\n        return false;\n    if (title == null) {\n        if (other.title != null)\n            return false;\n    } else if (!title.equals(other.title))\n        return false;\n    return true;\n}"
      } ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC"
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java"
  } ]
}, {
  "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/persistence/BookRepository.java",
  "packageName" : "com.baeldung.persistence",
  "imports" : [ {
    "dereferencedParts" : [ ],
    "name" : "org.springframework.data.repository.CrudRepository"
  }, {
    "dereferencedParts" : [ {
      "name" : "Book",
      "description" : null,
      "annotations" : [ "Entity" ],
      "methods" : [ ],
      "fields" : [ {
        "name" : "id",
        "accessModifier" : "private",
        "value" : null,
        "type" : "Long",
        "description" : null
      }, {
        "name" : "isbn",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "author",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "title",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "synopsis",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      }, {
        "name" : "language",
        "accessModifier" : "private",
        "value" : null,
        "type" : "String",
        "description" : null
      } ],
      "constructors" : [ {
        "name" : "Book",
        "body" : "{\n}",
        "arguments" : [ ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book() {\n}"
      }, {
        "name" : "Book",
        "body" : "{\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}",
        "arguments" : [ "final String author", "final String title", "final String isbn" ],
        "accessModifier" : "public",
        "methodsCalled" : [ ],
        "usedEntities" : [ "author", "title", "isbn" ],
        "annotations" : [ ],
        "description" : null,
        "methodDefinition" : "public Book(final String author, final String title, final String isbn) {\n    this.author = author;\n    this.title = title;\n    this.isbn = isbn;\n}"
      } ],
      "extends" : null,
      "childEntity" : null,
      "accessSpecifier" : "PUBLIC",
      "imports" : [ {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Column"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Entity"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.GeneratedValue"
      }, {
        "dereferencedParts" : [ ],
        "name" : "javax.persistence.Id"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonIgnore"
      }, {
        "dereferencedParts" : [ ],
        "name" : "com.fasterxml.jackson.annotation.JsonView"
      } ]
    } ],
    "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/model/Book.java",
    "name" : "com.baeldung.model.Book"
  } ],
  "entities" : [ {
    "name" : "BookRepository",
    "description" : null,
    "annotations" : [ ],
    "methods" : [ {
      "name" : "findByIsbn",
      "body" : "{\n}",
      "arguments" : [ "final String isbn" ],
      "accessModifier" : "",
      "methodsCalled" : [ ],
      "usedEntities" : [ ],
      "annotations" : [ ],
      "returnType" : "Book",
      "description" : null,
      "methodDefinition" : "Book findByIsbn(final String isbn);",
      "filePath" : "/home/info/spring-hypermedia-api/src/main/java/com/baeldung/persistence/BookRepository.java",
      "test_exists" : false,
      "test_functions" : { }
    } ],
    "fields" : [ ],
    "constructors" : [ ],
    "extends" : null,
    "childEntity" : null,
    "accessSpecifier" : "PUBLIC"
  } ],
  "samePackageClasses" : [ ]
} ]